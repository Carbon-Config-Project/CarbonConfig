buildscript {
    repositories {
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
			name = "gt"
			url = "https://gregtech.mechaenetia.com/"
		}
		maven {
			name = "gtnh"
			url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
		}
		maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        mavenCentral()
    }
    dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.11'
    }
}

apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = MC_VERSION + '-' + MOD_VERSION
group = 'carbonconfiglib'
archivesBaseName = 'Carbon Config'

eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"



minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
    flatDir {
       dirs("libs")
   	}
}

dependencies {
//    compile ':Primitive Collections-0.8.9'
}

sourceSets {
    main {
        java {
 			srcDir "carbonconfig/src/main/java"
 			srcDir "src/main/java"
 		}
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    dependsOn configurations.runtimeClasspath
	from {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		configurations.runtimeClasspath.findAll { it.name.equalsIgnoreCase('Primitive Collections-0.8.9.jar') }.collect { zipTree(it) }	
	}
}

processResources {
    inputs.property "version", version
    inputs.property "mcversion", MC_VERSION

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':version, 'mcversion':MC_VERSION
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
