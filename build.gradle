plugins {
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.45'
}
jarJar.enable()

version = MC_VERSION + '-' + MOD_VERSION
group = 'carbonconfiglib' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Carbon Config'



// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main {
        java {
 			srcDir "carbonconfig/src/main/java"
 			srcDir "src/main/java"
 		}
    }
}

runs {
    // applies to all the run configs below
    configureEach {
        modSource project.sourceSets.main
    }

    client {
    }

    server {
        programArgument '--nogui'
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
	maven {
        url = "https://www.cursemaven.com"
    }
    flatDir {
       dirs("libs")
   	}
}


dependencies {
    implementation "net.neoforged:neoforge:20.2.59-beta"
	implementation ':Primitive Collections-0.8.9'
    jarJar(group: 'com.github.Speiger', name: 'Primitive Collections', version: '[0.8,0.9)') {
	 	jarJar.pin(it, "0.8.9")
	}
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
